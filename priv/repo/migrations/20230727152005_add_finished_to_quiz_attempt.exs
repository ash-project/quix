defmodule Quix.Repo.Migrations.AddFinishedToQuizAttempt do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:quiz_attempts) do
      add :finished, :boolean, default: false
    end

    create table(:guesses, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :option, :text, null: false

      add :quiz_attempt_id,
          references(:quiz_attempts,
            column: :id,
            name: "guesses_quiz_attempt_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :question_id,
          references(:questions,
            column: :id,
            name: "guesses_question_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create unique_index(:guesses, [:quiz_attempt_id, :question_id],
             name: "guesses_unique_question_attempt_index"
           )
  end

  def down do
    drop_if_exists unique_index(:guesses, [:quiz_attempt_id, :question_id],
                     name: "guesses_unique_question_attempt_index"
                   )

    drop constraint(:guesses, "guesses_quiz_attempt_id_fkey")

    drop constraint(:guesses, "guesses_question_id_fkey")

    drop table(:guesses)

    alter table(:quiz_attempts) do
      remove :finished
    end
  end
end