defmodule Quix.Repo.Migrations.FixQuestionStateAndConfigureReferences do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:quizzes) do
      modify :state, :text, null: false, default: "pending"
    end

    drop constraint(:quiz_attempts, "quiz_attempts_quiz_id_fkey")

    alter table(:quiz_attempts) do
      modify :quiz_id,
             references(:quizzes,
               column: :id,
               name: "quiz_attempts_quiz_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all,
               on_update: :update_all
             )
    end

    drop constraint(:questions, "questions_quiz_id_fkey")

    alter table(:questions) do
      modify :quiz_id,
             references(:quizzes,
               column: :id,
               name: "questions_quiz_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all,
               on_update: :update_all
             )
    end

    drop constraint(:guesses, "guesses_question_id_fkey")

    drop constraint(:guesses, "guesses_quiz_attempt_id_fkey")

    alter table(:guesses) do
      modify :quiz_attempt_id,
             references(:quiz_attempts,
               column: :id,
               name: "guesses_quiz_attempt_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all,
               on_update: :update_all
             )

      modify :question_id,
             references(:questions,
               column: :id,
               name: "guesses_question_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all,
               on_update: :update_all
             )
    end
  end

  def down do
    drop constraint(:guesses, "guesses_quiz_attempt_id_fkey")

    drop constraint(:guesses, "guesses_question_id_fkey")

    alter table(:guesses) do
      modify :question_id,
             references(:questions,
               column: :id,
               name: "guesses_question_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :quiz_attempt_id,
             references(:quiz_attempts,
               column: :id,
               name: "guesses_quiz_attempt_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop constraint(:questions, "questions_quiz_id_fkey")

    alter table(:questions) do
      modify :quiz_id,
             references(:quizzes,
               column: :id,
               name: "questions_quiz_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop constraint(:quiz_attempts, "quiz_attempts_quiz_id_fkey")

    alter table(:quiz_attempts) do
      modify :quiz_id,
             references(:quizzes,
               column: :id,
               name: "quiz_attempts_quiz_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:quizzes) do
      modify :state, :text, null: true, default: nil
    end
  end
end
